/*
解题思路：动态规划
1、创建空的记忆数组，记录每个台阶的走法数
2、手动初始化走到第一个、第二个台阶的走法数
3、从第三个台阶开始遍历到最后的台阶：
    3.1、当前台阶的走法数=前一个台阶走法数+前两个台阶的走法数
4、返回最后一个台阶（楼顶）的走法数
*/

/**
 * @param {number} n
 * @return {number}
 */
var climbStairs = function (n) {
  // 1、创建空的记忆数组，记录每个台阶的走法数
  const memo = [];

  // 2、手动初始化走到第一个、第二个台阶的走法数
  memo[0] = 1;
  memo[1] = 2;

  // 3、从第三个台阶开始遍历到最后的台阶：
  for (let i = 2; i < n; i++) {
    // 3.1、当前台阶的走法数=前一个台阶走法数+前两个台阶的走法数
    memo[i] = memo[i - 1] + memo[i - 2];
  }
  // 4、返回最后一个台阶（楼顶）的走法数
  return memo[n - 1];
};
